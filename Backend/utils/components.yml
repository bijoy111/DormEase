components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string

    Success:
      type: object
      properties:
        message:
          type: string

    Post:
      type: object
      properties:
        post_id:
          type: number
        stu_id:
          type: number
        name:
          type: string
        created_at:
          type: string
        text:
          type: string
        "type":
          type: string
        upvote:
          type: number
        is_upvoted:
          type: boolean
        is_mine:
          type: boolean
        media:
          type: array
          items:
            type: string

    Notice:
      type: object
      properties:
        post_id:
          type: number
        title:
          type: string
        text:
          type: string
        created_at:
          type: string
        media:
          type: array
          items:
            type: object
            properties:
              index:
                type: number
              media_type:
                type: string
              media_link:
                type: string

    MealItem:
      type: object
      properties:
        name:
          type: string
        price_per_unit:
          type: number
        quantity:
          type: number

    Meal:
      type: object
      properties:
        date:
          type: string
        lunch:
          type: array
          items:
            $ref: "#/components/schemas/MealItem"
        dinner:
          type: array
          items:
            $ref: "#/components/schemas/MealItem"
    
    Applicant_apply:
      type: object
      properties:
        stu_id:
          type: number
        name:
          type: string
        dept:
          type: string
        created_at:
          type: string
        cgpa:
          type: number
        home_district:
          type: string
        school:
          type: string
        college:
          type: string

    Applicant_change:
      allOf:
        - $ref: "#/components/schemas/Applicant_apply"
        - type: object
          properties:
            room_no:
              type: number
            seat_no:
              type: number
            new_room_no:
              type: number
            new_seat_no:
              type: number
            reason:
              type: string

    SeatAllocation:
      type: object
      properties:
        applicants:
          type: array
          items:
            $ref: "#/components/schemas/Applicant_apply"
        rooms:
          type: array
          items:
            type: object
            properties:
              room_no:
                type: string
              allocations:
                type: array
                items:
                  type: number

    SeatChange:
      type: array
      items:
        $ref: "#/components/schemas/Applicant_change"

  responses:
    Success:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Success"
          example:
            message: OK
    DuplicateID:
      description: Duplicate ID
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error: User ID already exists
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error: Not found

    Post:
      description: Post
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Post"
          example:
            post_id: 1
            stu_id: 1905048
            name: Al Amin Sany
            created_at: "2024-01-01 00:00:00"
            text: Hello World
            type: status
            upvote: 10
            is_upvoted: false
            is_mine: false
            media:
              [
                "image1.jpg",
                "image2.jpg",
              ]
            comments:
              [
                {
                  post_id: 2,
                  stu_id: 1905052,
                  name: Bijoy Saiem,
                  created_at: "2024-01-01 01:00:00",
                  text: This is a comment,
                  type: comment,
                  upvote: 2,
                  is_upvoted: true,
                  is_mine: false,
                  media: ["image1.jpg"],
                  comments: [],
                },
              ]

    Notice:
      description: Notice
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Notice"
          example:
            post_id: 1
            title: Notice Title
            text: Notice Text
            created_at: "2024-01-01 00:00:00"
            media:
              [
                {
                  index: 0,
                  media_type: image,
                  media_link: "image1.jpg",
                },
                {
                  index: 1,
                  media_type: image,
                  media_link: "image2.jpg",
                },
              ]
              
    Meal:
      description: Meal
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Meal"
          example:
            date: "2024-01-01"
            lunch:
              [
                { name: Chicken Biriyani, price_per_unit: 80, quantity: 200 },
                { name: Daal, price_per_unit: 10, quantity: 300 },
              ]
            dinner:
              [
                { name: Beef Bhuna, price_per_unit: 80, quantity: 250 },
                { name: Rice, price_per_unit: 10, quantity: 300 },
              ]

    SeatAllocation:
      description: Seat Allocation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SeatAllocation"
          example:
            applicants:
              [
                {
                  stu_id: 1905048,
                  name: John Doe,
                  dept: CSE,
                  created_at: "2024-01-01 00:00:00",
                  cgpa: 3.99,
                  home_district: Dinaipur,
                  school: Dinajpur Zilla School,
                  college: 
                },
                {
                  stu_id: 1905049,
                  name: Jane Doe,
                  dept: CSE,
                  created_at: "2024-01-01 00:00:00",
                  cgpa: 3.99,
                  home_district: Dhaka,
                  school: Dhaka Residential Model School,
                  college: Notre Dame College
                }
              ]
            rooms:
              [
                {
                  room_no: 101,
                  allocations: [1905048, 1905052, 1905054, 1905055],
                },
                {
                  room_no: 102,
                  allocations: [1905049, 1905053, 1905056, 1905057],
                }
              ]

    SeatChange:
      description: Seat Change
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SeatChange"
          example:
            [
              {
                stu_id: 1905048,
                name: John Doe,
                dept: CSE,
                created_at: "2024-01-01 00:00:00",
                cgpa: 3.99,
                home_district: Dinaipur,
                school: Dinajpur Zilla School,
                college: Dinajpur Govt. College,
                room_no: 101,
                seat_no: 1,
                new_room_no: 102,
                new_seat_no: 2,
                reason: "I want to change my room",
              }
            ]
  
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
